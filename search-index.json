[{"title":"Run Android in Kali-2025.1 ignoring its kernel","date":"2025-10-05T13:24:10.808Z","url":"/2025/10/05/%E6%9C%89%E5%85%B3kali2025.1%E7%89%88%E6%9C%AC%E7%9A%84Android%E8%BF%90%E8%A1%8C%E5%8F%AF%E8%A1%8C%E6%80%A7%E6%96%B9%E6%A1%88%E6%8E%A2%E7%A9%B6%E5%8F%8A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","tags":[["玩机","/tags/%E7%8E%A9%E6%9C%BA/"]],"categories":[["undefined",""]],"content":"just doit! 摘要：使用Andriod-x86项目获得的iso文件，加上houdini的开源模块，实现andriod-x86环境下的对arm64-v8a,arm32架构应用的支持. 写在前面：由于kali2025.1 rolling版本版本内核较新，目前大多数应用会存在冲突，而我目前用实体机装的kali,不好重装windows,遂作出探究 现行方案❌一.使用kvm驱动Andriod Studio需要kvm,支持最新的andriod版本，由于内核较新，无法正常使用。 占用是真的高。。。，启动慢，兼容性差 Genymotion1.简介Genymotion是一个跨平台的Android模拟器，它可以在Linux、Windows和Mac上运行。它提供了完整的Android系统镜像，并且支持OpenGL加速，适合用于测试和开发。Genymotion 基于 Oracle VirtualBox 开发的 评注:我都用virtualBOX了你让我玩这。。。更何况新系统用了还报错。。。 ❌二.使用容器化系统启动Anbox or WaydroidAnbox（Android in a Box）是一个开源的容器化系统，可以在Linux系统上运行Android应用。它使用Linux容器（LXC）将Android系统放入容器中，并集成到宿主系统中，使得Android应用可以像原生应用一样运行。 要求:系统有binder模块，但巧了刚好kali2025就刚好没有lsmod | grep -e ashmem_linux -e binder（无输出）你总不想自己编译模块吧 系统需要支持 Snap（因为 Anbox 通过 Snap 包分发）图形驱动需要支持 OpenGL ES 3.0 或以上 总结：如果内核模块无法加载，可能需要自己编译内核。具体步骤参考 Anbox 官方文档。图形问题 如果遇到图形问题，确保你的显卡驱动支持 OpenGL ES 3.0 或以上。Snap 问题 如果系统不支持 Snap，可以考虑从源码编译安装，但过程较为复杂。其他发行版 对于其他发行版，安装步骤可能有所不同，特别是内核模块的安装。请参考 Anbox 官方文档或相应发行版的 Wiki。注意 Anbox 仍处于开发阶段，可能不稳定。如果遇到问题，可以考虑使用 Waydroid（Anbox 的一个分支，据说有更好的性能和支持）。 ✅三.no🧠操作（fake）主播主播，以上的方案都太吃操作了，有没有更加简单的方案呢，有的有的，那就用某位四字干员助你（bushi）,北京麟卓。不是，我系统装好了怎么开不了应用了，还报模块缺失，是何意味。官方给出的文档是暂未支持，请期待后续版本（还是被内核缺失做局了啊x） ✅四.最终方案VirtualBox + Android-x861.1文件准备：1.Andriod-x86 iso文件:. 详情：有关arm64,arm86兼容库的官方版本解释： arm64后的兼容库在android-x86 7.1版本后不再提供支持，需手动从chorme-os中提取，有被别人提取好的文件，但须处理,这里有个压缩文件.【高级操作：手动移植】参考： 1.2安装系统 在virtual-box 选择控制-&gt;新建-&gt;选择你下载好的iso文件，系统选linux就行,但一定要选择64位，确保你的盘大小为不小于8GB，内核数大于8,尽量大一点 评注：为了系统性能，推荐勾选“✅预先分配所有存储空间” 2.拉满显存 3.启动！请看相关教程弹出iso文件，重启(评注：推荐下载Andriod9的iso，还有插拔挂载需谨慎，出现detect deivce………………………………………………，可能就寄了)&#x2F;system一定要挂可写要用的命令已经在下： 手动重启第一个选项4.设置系统根据视频操作 2.1 使用某种方法推送文件到你的新系统推荐gitee,建个仓库，push除镜像外的你需要的文件上去，登陆就用手机登陆，使用验证码的登陆，用浏览器下文件，下到本地，直接用。下个mt-mannerger或者用系统自带的终端管理器 2.2 利用enable_nativebridge命令激活一下 2.3持久化存储(重启不丢失)由于根目录下的&#x2F;init.rc不可写，我们需要对&#x2F;system&#x2F;etc&#x2F;init.rc进行修改。在return 0之前添上三行 3.1最后的最后应用可正常运行，其他可尝试适配"},{"title":"CTF中常见提权(一)","date":"2025-10-05T11:26:59.796Z","url":"/2025/10/05/%E6%8F%90%E6%9D%83%EF%BC%88%E4%B8%80%EF%BC%89/","tags":[["CTF","/tags/CTF/"]],"categories":[["undefined",""]],"content":"CTF中常见提权(一)一.udf提权1.一句话：由于db的错误配置导致错误设置了数据库有较高的所有权，进而导致提权2.利用条件：sql错误配置()，可以连接数据库执行语句3.平台关键文件：windows:udf.dlllinux:udf.so 4.大致流程上马后发现有敏感文件由root创建-&gt;尝试读取无效-&gt;已知数据库类型连接方式查看&#x2F;etc&#x2F;passwd-&gt;看用户-&gt;用SFTP或蚁剑上传文件-&gt;使用show variables like &quot;%plugin%&quot;;查看插件目录-&gt;使用sqlmap对udf64.so&#x2F;udf32.so（或dll）进行解密 或者可以利用马子上传直接写文件：64位linux： 32位linux： 如何获取只要从github上找相关的就行了，sqlmap需见第一条。上传后请确保将文件复制到show variables like %plugins%;输出的结果路径中。 二.suid提权1.一句话：SUID（Set User ID）是一种特殊的文件权限，允许用户以文件所有者的权限执行文件。如果配置不当，可能被用于权限提升2.SUID 权限基础查看 SUID 文件 SUID 权限表示 常见的 SUID 利用方式 已知 SUID 二进制文件利用find 命令 如果 bash 有 SUID 利用系统命令通过 cp 覆盖文件 创建恶意备份 手动创建 SUID Shell方法 1：使用 cp（如果有 SUID cp） 方法 2：使用 find 执行 方法 3：使用脚本语言 Perl 3.高级利用技术 共享库劫持 (2)编译 (3)设置 LD_PRELOAD 环境变量利用 符号链接攻击 10.防御措施 解题： [UUCTF 2022 新生赛]uploadandinject题目： 脚本： 编译： CTFshow 654见"},{"title":"白盒代码审计工具—CodeQL安装教程【Liunx】","date":"2025-10-05T11:26:45.876Z","url":"/2025/10/05/codeql%E4%BD%BF%E7%94%A8%E8%BD%AC%E8%BD%BD/","tags":[["CTF","/tags/CTF/"]],"categories":[["undefined",""]],"content":"codeql简介codeql是一个将代码转化成类似数据库的形式，并基于该database进行分析的引擎。在 CodeQL 中，代码被视为数据。安全漏洞、Bug 和其他错误被建模为可针对从代码中提取的数据库执行的查询CodeQL安装 准备工具：（Xshell Xftp）个人习惯 Linux系统环境 Codeql-Linux文件 安装网站：选择：codeql-linux64.zip文件 点击下载linux上的Codeql的安装 进入Linux切换root用户并切换到根目录下 su rootcd &#x2F;opt 进入根目录下后 创建codeql-cli文件夹 sudo mkdir -p &#x2F;opt&#x2F;codeql-cli 使用Xftp(个人喜好也可以用别的方式传进去就ok了)传入刚才下载好的Codeql-linux64.zip文件到codeqlProject目录 传入的codeql进行解压操作 解压好后配置环境变量(暂时) 遇到问题： 创建 CodeQL 数据库 执行以下命令 必须指定以下内容： CodeQL CLI 分析数据库 命令为： 解释: 通过指定套件来进行查询 解释： 这里我把规则已经下载到了对应的目录，自己需要根据自己的目录来使用"},{"title":"n1-ctf-赛后复现","date":"2025-10-05T11:18:24.408Z","url":"/2025/10/05/n1-ctf/","tags":[["CTF","/tags/CTF/"]],"categories":[["undefined",""]],"content":"online_unzipper(100%)1.打软连接┌──(swordreforge㉿swordreforge)-[]└─$ ln &#x2F;etc&#x2F;passwd test┌──(swordreforge㉿swordreforge)-[]└─$ zip –symlinks test.zip passwd 正常上传，下载这样就会下载到文件了 改一下session┌──(swordreforge㉿swordreforge)-[~]└─$ flask-unsign –sign –cookie “{‘role’: ‘admin’, ‘username’: ‘admin’}” –secret “ #mu0cw9F#7bBCoF! “eyJyb2xlIjoiYWRtaW4iLCJ1c2VybmFtZSI6ImFkbWluIn0.aMUxug.GBoGLOiK_gczxw0482xAgoacOBo 2.命令注入用不了,按理说参数可控，可以多行命令执行的但为何无文件有了;`cat &#x2F;f* &gt; &#x2F;app&#x2F;uploads&#x2F;4&#x2F;4.txt`;flag{a3c268c2-ad5d-4117-a195-e0dfed1fd3ec} unfinished(60%)1.赛时思路使用了httponly&#x3D;True-&gt;不可使用cookie带出（根据赛后复现该项为httpOlny&#x3D;True会造成非预期），flag在cookie中-&gt;多半是xss or csrf这样就易于想到： 大致思路：填充路径-&gt;&#x2F;profile机器访问路径 -&gt;&#x2F;api&#x2F;bio&#x2F;你登陆的用户名（注：本地可访问&#x2F;触发xss）ban了但没全ban触发机器路径-&gt;&#x2F;view逻辑验证：为了更方便查看，修改了有关无头浏览器的代码： xss:&#x2F;api&#x2F;bio&#x2F;a&#x2F;profile&#x2F;view日志如下： 所以我们要在服务器上开一个日志服务器，用于接收详细的请求信息： 以上为理论，具体复现后续再做 2.赛后复现1.大致思路同上2.不同点 ping（100%）1.赛时思考感觉是绕waf 赛后复现在python base64解码时，会出现解码不一致情况，这是因为最后的&#x3D;&#x3D;会是为视为编码的结束点,而终端会直接解码从而造成命令执行 因此： Peek a Fork(30%)没搞懂，socket在干啥？？十分的pwn dd if&#x3D;&#x2F;proc&#x2F;510400&#x2F;mem bs&#x3D;1 skip&#x3D;$((0x7fef25dd1000)) count&#x3D;4096 2&gt;&#x2F;dev&#x2F;null | stringsflag{test_flag}"},{"title":"开始的开始","date":"2025-10-04T15:39:37.124Z","url":"/2025/10/04/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"},{"date":"2025-10-05T12:55:18.444Z","url":"/about/index.html","categories":[["undefined",""]],"content":"About me I’m constantly exploring my own path, always passionate about technology. I’m an average student among my peers, but I’m a deep diver in any group or topic that catches my interest. When it comes to games, I usually lean toward action-oriented ones. Sometimes I also enjoy story-driven games that pull me into their world. I’m eager to contribute to open-source projects and aim to become a full-stack developer. I’m also enthusiastic about system troubleshooting and low-level tinkering—currently, I run Kali Linux on my physical machine. To contact:1.email:zhujian_20060818@qq.com2.wechat:_2006081801993.qq:2012174963"},{"title":"朋友们","date":"2025-10-04T15:34:38.000Z","url":"/linklist-example/index.html","categories":[["undefined",""]],"content":"webC3👨‍💼wuk0ngasal1n miscpwncryptootherlinkexample-linkstackoverflowpython-offical-document-link"}]